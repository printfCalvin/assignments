knitr::opts_chunk$set(cache=TRUE, echo = TRUE)
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=45), tidy=FALSE)
library(MASS)
data(Animals2)
plot(log(Animals2$body), log(Animals2$brain),
pch=19, col=adjustcolor("grey", .5),
xlab="log(body)", ylab="log(Brain)")
library(MASS)
data(Animals2)
plot(log(Animals2$body), log(Animals2$brain),
pch=19, col=adjustcolor("grey", .5),
xlab="log(body)", ylab="log(Brain)")
library(MASS)
knitr::opts_chunk$set(cache=TRUE, echo = TRUE)
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=45), tidy=FALSE)
library(MASS)
data(Animals2)
plot(log(Animals2$body), log(Animals2$brain),
pch=19, col=adjustcolor("grey", .5),
xlab="log(body)", ylab="log(Brain)")
install.packages(c("MASS"), dependencies = TRUE)
install.packages(c("MASS"), dependencies = TRUE)
knitr::opts_chunk$set(cache=TRUE, echo = TRUE)
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=45), tidy=FALSE)
library(MASS)
data(Animals2)
plot(log(Animals2$body), log(Animals2$brain),
pch=19, col=adjustcolor("grey", .5),
xlab="log(body)", ylab="log(Brain)")
library(MASS)
data(Animals2, package="robustbase")
plot(log(Animals2$body), log(Animals2$brain),
pch=19, col=adjustcolor("grey", .5),
xlab="log(body)", ylab="log(Brain)")
knitr::opts_chunk$set(cache=TRUE, echo = TRUE)
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=45), tidy=FALSE)
getval = function(i) {
function(i) {
fit = lm(log(Animals2[Sstar[,i], "brain"]) ~log(Animals2[Sstar[,i], "body"]))
return(c(as.numeric(fit$coefficients[1]), as.numeric(fit$coefficients[2])))
}
}
btSmpLm = sapply(1:B, FUN = getval(i))
a = rlm(log(Animals2$brain) ~ log(Animals2$body))
library(MASS)
data(Animals2, package="robustbase")
plot(log(Animals2$body), log(Animals2$brain),
pch=19, col=adjustcolor("grey", .5),
xlab="log(body)", ylab="log(Brain)")
a = rlm(log(Animals2$brain) ~ log(Animals2$body))
rlm(log(Animals2$brain) ~ log(Animals2$body))
B <- 1000
n = nrow(Animals2)
Sstar <- sapply(1:B, FUN = function(b)  sample(1:n, n, replace = T))
dim(Sstar)
getval = function(i) {
function(i) {
fit = lm(log(Animals2[Sstar[,i], "brain"]) ~log(Animals2[Sstar[,i], "body"]))
return(c(as.numeric(fit$coefficients[1]), as.numeric(fit$coefficients[2])))
}
}
btSmpLm = sapply(1:B, FUN = getval(i))
B <- 1000
n = nrow(Animals2)
Sstar <- sapply(1:B, FUN = function(b)  sample(1:n, n, replace = T))
getval = function(i) {
function(i) {
fit = rlm(log(Animals2[Sstar[,i], "brain"]) ~log(Animals2[Sstar[,i], "body"]))
return(c(as.numeric(fit$coefficients[1]), as.numeric(fit$coefficients[2])))
}
}
btSmpLm = sapply(1:B, FUN = getval(i))
B <- 1000
n = nrow(Animals2)
Sstar <- sapply(1:B, FUN = function(b)  sample(1:n, n, replace = T))
getval = function(i) {
function(i) {
fit = rlm(log(Animals2[Sstar[,i], "brain"]) ~log(Animals2[Sstar[,i], "body"]))
return(c(as.numeric(fit$coefficients[1]), as.numeric(fit$coefficients[2])))
}
}
btSmpLm = sapply(1:B, FUN = getval(i))
n = nrow(Animals2)
Sstar <- sapply(1:B, FUN = function(b)  sample(1:n, n, replace = T))
getval = function(i) {
function(i) {
fit = rlm(log(Animals2[Sstar[,i], "brain"]) ~log(Animals2[Sstar[,i], "body"]))
return(c(as.numeric(fit$coefficients[1]), as.numeric(fit$coefficients[2])))
}
}
btSmpLm = sapply(1:B, FUN = getval(i))
plot(btSmpLm[1,], btSmpLm[2,])
