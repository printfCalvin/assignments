goals.results <- read.csv('GretzkyGoals.csv', header = TRUE)
N = nrow(goals.results)
time = numeric(1)
j = 1
for(i in 1 : N) {
period.char = goals.results$Per.[i]
if(period.char == "OT"){
next
}
time.char = as.character(goals.results$Time[i])
if(nchar(time.char) == 5) {
time.char = c(period.char, substr(time.char,1,2), substr(time.char,4,6))
} else {
time.char = c(period.char, substr(time.char,1,1), substr(time.char,3,5))
}
time.num = as.numeric(time.char)
time.num[1] = time.num[1] - 1
time[j] = sum(time.num*c(1200,60,1))
j = j + 1
}
mean(time)
median(time)
range(time)
powerfun <- function(x, alpha) {
if(sum(x <= 0, na.rm=TRUE) > 0) stop("x must be positive")
if (alpha == 0)
log(x)
else if (alpha > 0) {
x^alpha
} else -x^alpha
}
time.empty = numeric(1)
time.goalie = numeric(1)
j = 1;
k = 1;
m = 1;
for(i in 1:N) {
period.char = goals.results$Per.[i]
if(period.char == "OT"){
next
}
if(goals.results$Goalie[i] == "") {
time.empty[j] = time[m]
j = j + 1
} else {
time.goalie[k] = time[m]
k = k + 1
}
m = m + 1
}
par(mfrow = c(2, 2))
hist(time.empty, breaks=quantile(time, p=seq(0, 1, length.out=9)), prob=TRUE, main="histogram of empty-net goals occuring
time unequal bins" )
hist(time.goalie, breaks=quantile(time, p=seq(0, 1, length.out=9)), prob=TRUE, main="histogram of against-goalie goals occuring
time unequal bins" )
hist(time.empty, breaks=seq(0, 3600, length.out=9), prob=TRUE, xlab="occuring time of Gretzky's goals", main="histogram of
against-goalie goals every 2 minutes")
hist(time.goalie, breaks=seq(0, 3600, length.out=9), prob=TRUE, xlab="occuring time of Gretzky's goals", main="histogram of
against-goalie goals every 2 minutes")
who.results <- read.csv('WHO_life.csv', header = TRUE)
who.results[679]
who.results <- read.csv('WHO_life.csv', header = TRUE)
who.results$Country[679]
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(-1/2, 1.5, length.out=9)
for(i in 1 : 9) {
hist(powerfun(who.results$LB.Male, a), prob=TRUE, main= paste("alpha = ", a[i] ))
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(-1/2, 1.5, length.out=9)
for(i in 1 : 9) {
hist(powerfun(who.results$LB.Male, a), prob=TRUE, main= paste("alpha = ", a[i] ))
}
#par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(-1/2, 1.5, length.out=9)
for(i in 1 : 9) {
hist(powerfun(who.results$LB.Male, a), prob=TRUE, main= paste("alpha = ", a[i] ))
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(-1/2, 1.5, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$LB.Male, a), prob=TRUE, main= paste("alpha = ", a[i] ))
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(-1/2, 1.5, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$LB.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]))
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(-1/2, 1.5, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$LB.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), breaks = 30)
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(1.5, 3, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$LB.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), breaks = 30)
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(2, 4, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$LB.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), breaks = 30)
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(3, 5, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$LB.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), breaks = 30)
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(3, 5, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$L60.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), breaks = 30)
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(-1.5, 1.5, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$L60.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), breaks = 30)
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(-1.5, 2, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$L60.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), breaks = 30)
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(3.5, 4, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$LB.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), breaks = 30)
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(-1, 2, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$L60.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), breaks = 30)
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(0, 3, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$L60.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), breaks = 30)
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(0, 1, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$L60.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), breaks = 30)
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(0, 1.5, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$L60.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), breaks = 30)
}
par(mfrow=c(3,3), mar=2.5*c(1,1,1,0.1))
plot( powerfun(who.results$LB.Male, 4), powerfun(who.results$L60.Male, 0), pch = 19, cex=0.5, xlab = "", ylab = "",
main = "alpha_x = 4, alpha_y = 0")
plot( who.results$LB.Male, who.results$L60.Male, 0, pch = 19, cex=0.5, xlab = "", ylab = "",
main = "origional data")
par(mfrow=c(3,3), mar=2.5*c(1,1,1,0.1))
plot( powerfun(who.results$LB.Male, 4), powerfun(who.results$L60.Male, 0), pch = 19, cex=0.5, xlab = "", ylab = "",
main = "alpha_x = 4, alpha_y = 0")
plot( who.results$LB.Male, who.results$L60.Male, pch = 19, cex=0.5, xlab = "", ylab = "",
main = "origional data")
par(mfrow=c(1, 2), mar=2.5*c(1,1,1,0.1))
plot( powerfun(who.results$LB.Male, 4), powerfun(who.results$L60.Male, 0), pch = 19, cex=0.5, xlab = "", ylab = "",
main = "alpha_x = 4, alpha_y = 0")
plot( who.results$LB.Male, who.results$L60.Male, pch = 19, cex=0.5, xlab = "", ylab = "",
main = "origional data")
returns2 = read.csv("returns2.csv")
geo.mean = function(x){
if(any(x < 0)){
return('All variate values must be positive!')
}
return( (prod(x)) ^ (1/length(x)) )
}
sc = function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
Map(function(y) {  N*(attr(c(y,y.pop),...) - attr(y.pop,...))} ,y   )
}
y1 <- seq(0.01, 2, length.out=1000)
y2 <- seq(0.0001,100, length.out=1000)
par(mfrow=c(1,2))
plot(y1, sc(returns2, y1, geo.mean), type="l", lwd = 2,
main="Sensitivity curve for Geometric Mean",
xlab='y' , ylab="sensitivity")
returns2 = read.csv("returns2.csv")
geo.mean = function(x){
if(any(x < 0)){
return('All variate values must be positive!')
}
return( (prod(x)) ^ (1/length(x)) )
}
sc = function(y.pop, y, attr) {
N <- length(y.pop) + 1
Map(function(y) {  N*(attr(c(y,y.pop)) - attr(y.pop))} ,y   )
}
y1 <- seq(0.01, 2, length.out=1000)
y2 <- seq(0.0001,100, length.out=1000)
par(mfrow=c(1,2))
plot(y1, sc(returns2, y1, geo.mean), type="l", lwd = 2,
main="Sensitivity curve for Geometric Mean",
xlab='y' , ylab="sensitivity")
returns2 = read.csv("returns2.csv")
returns2 = as.numeric(returns2)
returns2 = read.csv("returns2.csv")
N = length(returns2)
data = numeric(N)
for(i in 1 : N) {
data[i] = as.numeric(returns2[i])
}
returns2 = read.csv("returns2.csv")
N = length(returns2)
typeof(returns2)
data = numeric(N)
for(i in 1 : N) {
data[i] = as.numeric(returns2[i])
}
returns2 = read.csv("returns2.csv")
N = length(returns2)
typeof(returns2[2])
returns2 = read.csv("returns2.csv")
N = length(returns2)
data = numeric(N)
for(i in 1 : N) {
data[i] = as.numeric(returns2$returns[i])
}
geo.mean = function(x){
if(any(x < 0)){
return('All variate values must be positive!')
}
return( (prod(x)) ^ (1/length(x)) )
}
sc = function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
Map(function(y) {  N*(attr(c(y,y.pop),...) - attr(y.pop,...))} ,y   )
}
y1 <- seq(0.01, 2, length.out=1000)
y2 <- seq(0.0001,100, length.out=1000)
par(mfrow=c(1,2))
plot(y1, sc(data, y1, geo.mean), type="l", lwd = 2,
main="Sensitivity curve for Geometric Mean",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
plot(y2, sc(data, y2, geo.mean), type="l", lwd = 2,
main="Sensitivity curve for Geometric Mean",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
returns2 = read.csv("returns2.csv")
N = length(returns2)
data = returns2$returns
geo.mean = function(x){
if(any(x < 0)){
return('All variate values must be positive!')
}
return( (prod(x)) ^ (1/length(x)) )
}
sc = function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
Map(function(y) {  N*(attr(c(y,y.pop),...) - attr(y.pop,...))} ,y   )
}
y1 <- seq(0.01, 2, length.out=1000)
y2 <- seq(0.0001,100, length.out=1000)
par(mfrow=c(1,2))
plot(y1, sc(data, y1, geo.mean), type="l", lwd = 2,
main="Sensitivity curve for Geometric Mean",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
plot(y2, sc(data, y2, geo.mean), type="l", lwd = 2,
main="Sensitivity curve for Geometric Mean",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
y1 <- seq(0.01, 2, length.out=1000)
y2 <- seq(0.0001,100, length.out=1000)
par(mfrow=c(1,2))
plot(y1, sr(data, y1, geo.mean), type="l", lwd = 2,
main="Sensitivity curve for Geometric Mean in [0.01,2]",
xlab='y' , ylab="sensitivity")
returns2 = read.csv("returns2.csv")
N = length(returns2)
data = returns2$returns
geo.mean = function(x){
if(any(x < 0)){
return('All variate values must be positive!')
}
return( (prod(x)) ^ (1/length(x)) )
}
sr = function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
Map(function(y) {  y / attr(y.pop,...)} ,y)
}
y1 <- seq(0.01, 2, length.out=1000)
y2 <- seq(0.0001,100, length.out=1000)
par(mfrow=c(1,2))
plot(y1, sr(data, y1, geo.mean), type="l", lwd = 2,
main="Sensitivity curve for Geometric Mean in [0.01,2]",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
plot(y2, sr(data, y2, geo.mean), type="l", lwd = 2,
main="Sensitivity curve for Geometric Mean in [0.0001, 100]",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
geo.mean = function(x){
if(any(x < 0)){
return('All variate values must be positive!')
}
return( (prod(x)) ^ (1/length(x)) )
}
sr = function(y.pop, y, attr, ...) {
N <- length(y.pop) + 1
Map(function(y) {  y / attr(y.pop,...)} ,y)
}
y1 <- seq(0.01, 2, length.out=1000)
y2 <- seq(0.0001,100, length.out=1000)
par(mfrow=c(1,2))
plot(y1, sr(data, y1, geo.mean), type="l", lwd = 2,
main="Sensitivity ratio for Geometric Mean in [0.01,2]",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
plot(y2, sr(data, y2, geo.mean), type="l", lwd = 2,
main="Sensitivity ratio for Geometric Mean in [0.0001, 100]",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
par(mfrow = c(1, 2))
hist(time, breaks=quantile(time, p=seq(0, 1, length.out=9)), prob=TRUE, main="histogram of goals occuring
time unequal bins" )
hist(time, breaks=seq(0, 3600, length.out=31), prob=TRUE, xlab="occuring time of Gretzky's goals", main="histogram of goals
every 2 minutes")
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(0, 1.5, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$L60.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), breaks = 30)
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(3.5, 4.5, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$LB.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), xlab = "", breaks = 30)
}
par(mfrow=c(3,3))
who.results <- read.csv('WHO_life.csv', header = TRUE)
a = seq(0, 1.5, length.out=9)
for(i in 1:9) {
hist(powerfun(who.results$L60.Male, a[i]), prob=TRUE, main=paste("alpha = ", a[i]), xlab = "", breaks = 30)
}
par(mfrow=c(1, 2), mar=2.5*c(1,1,1,0.1))
plot( powerfun(who.results$LB.Male, 4), powerfun(who.results$L60.Male, 0), pch = 19, cex=0.5, xlab = "", ylab = "",
main = "alpha_x = 4, alpha_y = 0")
plot( who.results$LB.Male, who.results$L60.Male, pch = 19, cex=0.5, xlab = "", ylab = "",
main = "origional data")
min(who.results$LB.Male)
par(mfrow=c(1, 2), mar=2.5*c(1,1,1,0.1))
plot( powerfun(who.results$LB.Male, 4), powerfun(who.results$L60.Male, 0), pch = 19, cex=0.5, xlab = "", ylab = "",
main = "alpha_x = 4, alpha_y = 0")
plot( who.results$LB.Male, who.results$L60.Male, pch = 19, cex=0.5, xlab = "", ylab = "",
main = "origional data")
par(mfrow=c(1,2))
plot(y1, sr(data, y1, geo.mean), type="l", lwd = 2,
main="Sensitivity ratio for Geometric Mean in [0.01,2]",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
plot(y2, sr(data, y2, geo.mean), type="l", lwd = 2,
main="Sensitivity ratio for Geometric Mean in [0.0001, 100]",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
par(mfrow=c(1,2))
plot(y1, sr(data, y1, geo.mean), type="l", lwd = 2,
main="Sensitivity ratio for Geometric Mean in [0.01,2]",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
plot(y2, sr(data, y2, geo.mean), type="l", lwd = 2,
main="Sensitivity ratio for Geometric Mean in [0.0001, 100]",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
y = returns2$returns
delta = geo.mean(data)^N - (geo.mean(data)-y)^(N-1)
SC    = N*delta
#par(mfrow=c(1,3))
plot(delta, main="Influence for Average", pch=19, col=adjustcolor("black", alpha = 0.2) )
y = returns2$returns
delta = geo.mean(data)^N - (geo.mean(data)-y)^(N-1)
#par(mfrow=c(1,3))
plot(delta, main="Influence for Average", pch=19, col=adjustcolor("black", alpha = 0.2) )
y = returns2$returns
delta = geo.mean(data)^(1/N) - (geo.mean(data)-y)^(1/(N-1))
#par(mfrow=c(1,3))
plot(delta, main="Influence for Average", pch=19, col=adjustcolor("black", alpha = 0.2) )
y = returns2$returns
delta = geo.mean(data)^(1/N) - (geo.mean(data)/y)^(1/(N-1))
#par(mfrow=c(1,3))
plot(delta, main="Influence for Average", pch=19, col=adjustcolor("black", alpha = 0.2) )
delta = geo.mean(data)^(1/N) - (geo.mean(data)/data)^(1/(N-1))
#par(mfrow=c(1,3))
plot(delta, main="Influence for Average", pch=19, col=adjustcolor("black", alpha = 0.2) )
delta = prod(data)^(1/N) - (prod.mean(data)/data)^(1/(N-1))
delta = prod(data)^(1/N) - (prod(data)/data)^(1/(N-1))
#par(mfrow=c(1,3))
plot(delta, main="Influence for Average", pch=19, col=adjustcolor("black", alpha = 0.2) )
N = length(data)
delta = prod(data)^(1/N) - (prod(data)/data)^(1/(N-1))
#par(mfrow=c(1,3))
plot(delta, main="Influence for Average", pch=19, col=adjustcolor("black", alpha = 0.2) )
N = length(data)
delta = prod(data)^(1/N) - (prod(data)/data)^(1/(N-1))
#par(mfrow=c(1,3))
plot(delta, main="Influence (Geometric Average)",pch=16 )
N = length(data)
delta = prod(data)^(1/N) - (prod(data)/data)^(1/(N-1))
ratio = (prod(data) / (prod(data)/data))^(N)
#par(mfrow=c(1,3))
plot(delta, main="Influence (Geometric Average)",pch=16 )
plot(ratio, main="Influence (Geometric Average)",pch=16 )
N = length(data)
delta = prod(data)^(1/N) - (prod(data)/data)^(1/(N-1))
ratio = (prod(data)^(1/N) / (prod(data)/data)^(1/(N-1))^N
#par(mfrow=c(1,3))
plot(delta, main="Influence (Geometric Average)",pch=16 )
N = length(data)
delta = prod(data)^(1/N) - (prod(data)/data)^(1/(N-1))
ratio = (prod(data)^(1/N) / (prod(data)/data)^(1/(N-1)))^N
#par(mfrow=c(1,3))
plot(delta, main="Influence (Geometric Average)",pch=16 )
plot(ratio, main="Influence (Geometric Average)",pch=16 )
N = length(data)
delta = prod(data)^(1/N) - (prod(data)/data)^(1/(N-1))
ratio = (prod(data)^(1/N) / (prod(data)/data)^(1/(N-1)))^N
par(mfrow=c(1,3))
plot(delta, main="Influence (Geometric Average)",pch=16 )
plot(ratio, main="Influence (Geometric Average)",pch=16 )
hist(data, main="", xlab="", breaks='FD')
N = length(data)
delta = prod(data)^(1/N) - (prod(data)/data)^(1/(N-1))
ratio = (prod(data)^(1/N) / (prod(data)/data)^(1/(N-1)))^N
par(mfrow=c(1,3))
plot(delta, main="Influence",pch=16 )
plot(ratio, main="Influence (ratio)",pch=16 )
hist(data, main="histogram of returns", xlab="Retun Value", breaks='FD')
par(mfrow=c(1,2))
plot(y1, sr(data, y1, geo.mean), type="l", lwd = 2,
main="Sensitivity ratio for
Geometric Mean in [0.01,2]",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
plot(y2, sr(data, y2, geo.mean), type="l", lwd = 2,
main="Sensitivity ratio for
Geometric Mean in [0.0001, 100]",
xlab='y' , ylab="sensitivity")
abline(h=0, v=0, col="grey")
N = length(data)
delta = prod(data)^(1/N) - (prod(data)/data)^(1/(N-1))
ratio = (prod(data)^(1/N) / (prod(data)/data)^(1/(N-1)))^N
par(mfrow=c(1,3))
plot(delta, main="Influence",pch=16 )
plot(ratio, xlab  = "delta(ratio)", main="Influence (ratio)",pch=16 )
hist(data, main="histogram of returns", xlab="Retun Value", breaks='FD')
N = length(data)
delta = prod(data)^(1/N) - (prod(data)/data)^(1/(N-1))
ratio = (prod(data)^(1/N) / (prod(data)/data)^(1/(N-1)))^N
par(mfrow=c(1,3))
plot(delta, main="Influence",pch=16 )
plot(ratio, ylab  = "delta(ratio)", main="Influence (ratio)",pch=16 )
hist(data, main="histogram of returns", xlab="Retun Value", breaks='FD')
qvals <- sort(time)
pvals <- ppoints(length(qvals))
plot(pvals, qvals, pch = 19,
xlim=c(0,1),
xlab = "Proportion p",
ylab = "goal times",
main = "qualtile plot of the goal times")
par(mfrow = c(2, 2), mar=2.5*c(1,4,1,0.1))
hist(time, prob=TRUE, xlab="occuring time of Gretzky's goals", main="histogram of goals
occuring time using Sturges")
hist(time, breaks="FD", prob=TRUE, xlab="occuring time of Gretzky's goals", main="histogram of goals
occuring time using
Freedman-Diaconis")
hist(time, breaks="scott", prob=TRUE, xlab="occuring time of Gretzky's goals", main="histogram of goals
occuring time using Scott")
boxplot(time, main="boxplot of occuring time
of Gretzky's goals", ylab="occuring time of
Gretzky's goals")
